package com.onetomanydemo;

import java.util.Arrays;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.onetomany.demo.Department;
import com.onetomany.demo.Employee;

public class MainDemo {
	
	public static void main(String[] args) {
		
		SessionFactory sessionFactory = new Configuration().configure("hibernate.cfg.xml")
				.addAnnotatedClass(Author.class).addAnnotatedClass(Books.class).buildSessionFactory();

		Session session = sessionFactory.openSession();
		Transaction transaction = session.beginTransaction();
		
		try {
			// Create a new department
			Books book = new Books();
			book.setBid(100);
			book.setBookName("java");

			
			Author author1 = new Author();
			author1.setAid(10);
			author1.setAuthorName("james");
			
			Author author2 = new Author();
			author2.setAid(11);
			author2.setAuthorName("jhons");

			List<Author> list = Arrays.asList(author1,author2);
			book.setAuthors(list);

			// Persist the department, which will cascade the operation to the employees
			session.save(book);

			// Commit the transaction
			transaction.commit();
		} catch (Exception e) {
			if (transaction != null) {
				transaction.rollback();
			}
			e.printStackTrace();
		} finally {
			session.close();
			sessionFactory.close();
		}
		
		
		
	}

}
